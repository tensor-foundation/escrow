/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

/** BadOwner: bad owner */
export const TENSOR_ESCROW_ERROR__BAD_OWNER = 0x1780; // 6016
/** BadMargin: bad margin account passed */
export const TENSOR_ESCROW_ERROR__BAD_MARGIN = 0x178b; // 6027
/** MarginInUse: margin account has pools open and is in use */
export const TENSOR_ESCROW_ERROR__MARGIN_IN_USE = 0x1790; // 6032

export type TensorEscrowError =
  | typeof TENSOR_ESCROW_ERROR__BAD_MARGIN
  | typeof TENSOR_ESCROW_ERROR__BAD_OWNER
  | typeof TENSOR_ESCROW_ERROR__MARGIN_IN_USE;

let tensorEscrowErrorMessages: Record<TensorEscrowError, string> | undefined;
if (__DEV__) {
  tensorEscrowErrorMessages = {
    [TENSOR_ESCROW_ERROR__BAD_MARGIN]: `bad margin account passed`,
    [TENSOR_ESCROW_ERROR__BAD_OWNER]: `bad owner`,
    [TENSOR_ESCROW_ERROR__MARGIN_IN_USE]: `margin account has pools open and is in use`,
  };
}

export function getTensorEscrowErrorMessage(code: TensorEscrowError): string {
  if (__DEV__) {
    return (tensorEscrowErrorMessages as Record<TensorEscrowError, string>)[
      code
    ];
  }

  return 'Error message not available in production bundles. Compile with `__DEV__` set to true to see more information.';
}
