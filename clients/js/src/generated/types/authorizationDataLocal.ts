/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Codec, Decoder, Encoder, combineCodec } from '@solana/codecs-core';
import {
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import {
  TaggedPayload,
  TaggedPayloadArgs,
  getTaggedPayloadDecoder,
  getTaggedPayloadEncoder,
} from '.';

export type AuthorizationDataLocal = { payload: Array<TaggedPayload> };

export type AuthorizationDataLocalArgs = { payload: Array<TaggedPayloadArgs> };

export function getAuthorizationDataLocalEncoder() {
  return getStructEncoder<AuthorizationDataLocalArgs>([
    ['payload', getArrayEncoder(getTaggedPayloadEncoder())],
  ]) satisfies Encoder<AuthorizationDataLocalArgs>;
}

export function getAuthorizationDataLocalDecoder() {
  return getStructDecoder<AuthorizationDataLocal>([
    ['payload', getArrayDecoder(getTaggedPayloadDecoder())],
  ]) satisfies Decoder<AuthorizationDataLocal>;
}

export function getAuthorizationDataLocalCodec(): Codec<
  AuthorizationDataLocalArgs,
  AuthorizationDataLocal
> {
  return combineCodec(
    getAuthorizationDataLocalEncoder(),
    getAuthorizationDataLocalDecoder()
  );
}
