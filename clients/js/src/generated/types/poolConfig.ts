/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Codec, Decoder, Encoder, combineCodec } from '@solana/codecs-core';
import {
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import {
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
} from '@solana/codecs-numbers';
import {
  Option,
  OptionOrNullable,
  getOptionDecoder,
  getOptionEncoder,
} from '@solana/options';
import {
  CurveType,
  CurveTypeArgs,
  PoolType,
  PoolTypeArgs,
  getCurveTypeDecoder,
  getCurveTypeEncoder,
  getPoolTypeDecoder,
  getPoolTypeEncoder,
} from '.';

export type PoolConfig = {
  poolType: PoolType;
  curveType: CurveType;
  startingPrice: bigint;
  delta: bigint;
  /** Trade pools only */
  mmCompoundFees: boolean;
  mmFeeBps: Option<number>;
};

export type PoolConfigArgs = {
  poolType: PoolTypeArgs;
  curveType: CurveTypeArgs;
  startingPrice: number | bigint;
  delta: number | bigint;
  /** Trade pools only */
  mmCompoundFees: boolean;
  mmFeeBps: OptionOrNullable<number>;
};

export function getPoolConfigEncoder() {
  return getStructEncoder<PoolConfigArgs>([
    ['poolType', getPoolTypeEncoder()],
    ['curveType', getCurveTypeEncoder()],
    ['startingPrice', getU64Encoder()],
    ['delta', getU64Encoder()],
    ['mmCompoundFees', getBooleanEncoder()],
    ['mmFeeBps', getOptionEncoder(getU16Encoder())],
  ]) satisfies Encoder<PoolConfigArgs>;
}

export function getPoolConfigDecoder() {
  return getStructDecoder<PoolConfig>([
    ['poolType', getPoolTypeDecoder()],
    ['curveType', getCurveTypeDecoder()],
    ['startingPrice', getU64Decoder()],
    ['delta', getU64Decoder()],
    ['mmCompoundFees', getBooleanDecoder()],
    ['mmFeeBps', getOptionDecoder(getU16Decoder())],
  ]) satisfies Decoder<PoolConfig>;
}

export function getPoolConfigCodec(): Codec<PoolConfigArgs, PoolConfig> {
  return combineCodec(getPoolConfigEncoder(), getPoolConfigDecoder());
}
