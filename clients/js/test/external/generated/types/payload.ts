/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Codec, Decoder, Encoder, combineCodec } from '@solana/codecs-core';
import {
  getMapDecoder,
  getMapEncoder,
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import { getStringDecoder, getStringEncoder } from '@solana/codecs-strings';
import {
  PayloadType,
  PayloadTypeArgs,
  getPayloadTypeDecoder,
  getPayloadTypeEncoder,
} from '.';

export type Payload = { map: Map<string, PayloadType> };

export type PayloadArgs = { map: Map<string, PayloadTypeArgs> };

export function getPayloadEncoder() {
  return getStructEncoder<PayloadArgs>([
    ['map', getMapEncoder(getStringEncoder(), getPayloadTypeEncoder())],
  ]) satisfies Encoder<PayloadArgs>;
}

export function getPayloadDecoder() {
  return getStructDecoder<Payload>([
    ['map', getMapDecoder(getStringDecoder(), getPayloadTypeDecoder())],
  ]) satisfies Decoder<Payload>;
}

export function getPayloadCodec(): Codec<PayloadArgs, Payload> {
  return combineCodec(getPayloadEncoder(), getPayloadDecoder());
}
