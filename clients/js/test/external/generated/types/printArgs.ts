/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Codec, Decoder, Encoder, combineCodec } from '@solana/codecs-core';
import {
  GetDataEnumKind,
  GetDataEnumKindContent,
  getDataEnumDecoder,
  getDataEnumEncoder,
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import { getU64Decoder, getU64Encoder } from '@solana/codecs-numbers';

export type PrintArgs = { __kind: 'V1'; edition: bigint };

export type PrintArgsArgs = { __kind: 'V1'; edition: number | bigint };

export function getPrintArgsEncoder() {
  return getDataEnumEncoder<PrintArgsArgs>([
    [
      'V1',
      getStructEncoder<GetDataEnumKindContent<PrintArgsArgs, 'V1'>>([
        ['edition', getU64Encoder()],
      ]),
    ],
  ]) satisfies Encoder<PrintArgsArgs>;
}

export function getPrintArgsDecoder() {
  return getDataEnumDecoder<PrintArgs>([
    [
      'V1',
      getStructDecoder<GetDataEnumKindContent<PrintArgs, 'V1'>>([
        ['edition', getU64Decoder()],
      ]),
    ],
  ]) satisfies Decoder<PrintArgs>;
}

export function getPrintArgsCodec(): Codec<PrintArgsArgs, PrintArgs> {
  return combineCodec(getPrintArgsEncoder(), getPrintArgsDecoder());
}

// Data Enum Helpers.
export function printArgs(
  kind: 'V1',
  data: GetDataEnumKindContent<PrintArgsArgs, 'V1'>
): GetDataEnumKind<PrintArgsArgs, 'V1'>;
export function printArgs<K extends PrintArgsArgs['__kind']>(
  kind: K,
  data?: any
): Extract<PrintArgsArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isPrintArgs<K extends PrintArgs['__kind']>(
  kind: K,
  value: PrintArgs
): value is PrintArgs & { __kind: K } {
  return value.__kind === kind;
}
