/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Codec, Decoder, Encoder, combineCodec } from '@solana/codecs-core';
import {
  GetDataEnumKind,
  GetDataEnumKindContent,
  getDataEnumDecoder,
  getDataEnumEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  getUnitDecoder,
  getUnitEncoder,
} from '@solana/codecs-data-structures';
import { getU64Decoder, getU64Encoder } from '@solana/codecs-numbers';

export type PrintSupply =
  | { __kind: 'Zero' }
  | { __kind: 'Limited'; fields: [bigint] }
  | { __kind: 'Unlimited' };

export type PrintSupplyArgs =
  | { __kind: 'Zero' }
  | { __kind: 'Limited'; fields: [number | bigint] }
  | { __kind: 'Unlimited' };

export function getPrintSupplyEncoder() {
  return getDataEnumEncoder<PrintSupplyArgs>([
    ['Zero', getUnitEncoder()],
    [
      'Limited',
      getStructEncoder<GetDataEnumKindContent<PrintSupplyArgs, 'Limited'>>([
        ['fields', getTupleEncoder([getU64Encoder()])],
      ]),
    ],
    ['Unlimited', getUnitEncoder()],
  ]) satisfies Encoder<PrintSupplyArgs>;
}

export function getPrintSupplyDecoder() {
  return getDataEnumDecoder<PrintSupply>([
    ['Zero', getUnitDecoder()],
    [
      'Limited',
      getStructDecoder<GetDataEnumKindContent<PrintSupply, 'Limited'>>([
        ['fields', getTupleDecoder([getU64Decoder()])],
      ]),
    ],
    ['Unlimited', getUnitDecoder()],
  ]) satisfies Decoder<PrintSupply>;
}

export function getPrintSupplyCodec(): Codec<PrintSupplyArgs, PrintSupply> {
  return combineCodec(getPrintSupplyEncoder(), getPrintSupplyDecoder());
}

// Data Enum Helpers.
export function printSupply(
  kind: 'Zero'
): GetDataEnumKind<PrintSupplyArgs, 'Zero'>;
export function printSupply(
  kind: 'Limited',
  data: GetDataEnumKindContent<PrintSupplyArgs, 'Limited'>['fields']
): GetDataEnumKind<PrintSupplyArgs, 'Limited'>;
export function printSupply(
  kind: 'Unlimited'
): GetDataEnumKind<PrintSupplyArgs, 'Unlimited'>;
export function printSupply<K extends PrintSupplyArgs['__kind']>(
  kind: K,
  data?: any
): Extract<PrintSupplyArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isPrintSupply<K extends PrintSupply['__kind']>(
  kind: K,
  value: PrintSupply
): value is PrintSupply & { __kind: K } {
  return value.__kind === kind;
}
