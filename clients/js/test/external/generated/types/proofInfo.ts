/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Codec, Decoder, Encoder, combineCodec } from '@solana/codecs-core';
import {
  getArrayDecoder,
  getArrayEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';

export type ProofInfo = { proof: Array<Uint8Array> };

export type ProofInfoArgs = ProofInfo;

export function getProofInfoEncoder() {
  return getStructEncoder<ProofInfoArgs>([
    ['proof', getArrayEncoder(getBytesEncoder({ size: 32 }))],
  ]) satisfies Encoder<ProofInfoArgs>;
}

export function getProofInfoDecoder() {
  return getStructDecoder<ProofInfo>([
    ['proof', getArrayDecoder(getBytesDecoder({ size: 32 }))],
  ]) satisfies Decoder<ProofInfo>;
}

export function getProofInfoCodec(): Codec<ProofInfoArgs, ProofInfo> {
  return combineCodec(getProofInfoEncoder(), getProofInfoDecoder());
}
